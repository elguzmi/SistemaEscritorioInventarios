<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>